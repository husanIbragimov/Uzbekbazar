# Generated by Django 5.1 on 2024-08-16 17:57

import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Kitob Muallif',
                'verbose_name_plural': 'Kitob Mualliflar',
            },
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Rang',
                'verbose_name_plural': 'Ranglar',
            },
        ),
        migrations.CreateModel(
            name='CoverBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Kitob Muqova',
                'verbose_name_plural': 'Kitob Muqovalar',
            },
        ),
        migrations.CreateModel(
            name='LanguageBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Kitob tili',
                'verbose_name_plural': 'Kitob tililar',
            },
        ),
        migrations.CreateModel(
            name='PublisherBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Kitob Nashriyoti',
                'verbose_name_plural': 'Kitob Nashriyotlar',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Mavsum',
                'verbose_name_plural': 'Mavsumlar',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Volume_Xajm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='icon/')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='banner/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_colors', models.BooleanField(default=False)),
                ('is_brend', models.BooleanField(default=False)),
                ('is_season', models.BooleanField(default=False)),
                ('is_authorBook', models.BooleanField(default=False)),
                ('is_coverBook', models.BooleanField(default=False)),
                ('is_publisherBook', models.BooleanField(default=False)),
                ('is_languageBook', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='brend/')),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True}, related_name='category_brend', to='products.category')),
            ],
            options={
                'verbose_name': 'Brend',
                'verbose_name_plural': 'Brendlar',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('title', models.TextField()),
                ('title_uz', models.TextField(null=True)),
                ('title_ru', models.TextField(null=True)),
                ('slug', models.SlugField(max_length=250)),
                ('status', models.CharField(blank=True, choices=[('new', 'NEW'), ('hot', 'HOT'), ('best', 'BEST SELL'), ('sale', 'SALE')], max_length=10, null=True)),
                ('desc', ckeditor_uploader.fields.RichTextUploadingField()),
                ('desc_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('desc_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('description_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('price_default', models.IntegerField(blank=True, default=0, null=True)),
                ('percentage', models.FloatField(blank=True, default=0, null=True)),
                ('discount', models.FloatField(blank=True, default=0, null=True)),
                ('volume_xajm_value', models.IntegerField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('author_book', models.ManyToManyField(blank=True, related_name='author_book_products', to='products.authorbook')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_products', to='products.brend')),
                ('category', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True}, related_name='category_products', to='products.category')),
                ('cover_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cover_products', to='products.coverbook')),
                ('language_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='language_book_products', to='products.languagebook')),
                ('variant', models.ManyToManyField(blank=True, related_name='variant_products', to='base.variant')),
                ('publisher_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='publisher_book_products', to='products.publisherbook')),
                ('season', models.ManyToManyField(blank=True, related_name='season_products', to='products.season')),
                ('tags', models.ManyToManyField(blank=True, related_name='tags_products', to='products.tags')),
                ('volume_xajm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valume_products', to='products.volume_xajm')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlyBestSell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', ckeditor_uploader.fields.RichTextUploadingField()),
                ('name_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('name_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='monthly_best_sell/')),
                ('is_active', models.BooleanField(default=True)),
                ('products', models.ManyToManyField(blank=True, related_name='products_monthly_best_sell', to='products.product')),
            ],
            options={
                'verbose_name': 'Oylik eng kop sotilgan',
                'verbose_name_plural': 'Oylik eng kop sotilganlar',
            },
        ),
        migrations.CreateModel(
            name='DiscountDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', ckeditor_uploader.fields.RichTextUploadingField()),
                ('name_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('name_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='discount_data/')),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('products', models.ManyToManyField(blank=True, related_name='products_discount_date', to='products.product')),
            ],
            options={
                'verbose_name': 'Vaqt bilan beriladigon chegirma',
                'verbose_name_plural': 'Vaqt bilan beriladigon chegirmalar',
            },
        ),
        migrations.CreateModel(
            name='BannerDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', ckeditor_uploader.fields.RichTextUploadingField()),
                ('name_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('name_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='banner_discount/')),
                ('is_active', models.BooleanField(default=True)),
                ('products', models.ManyToManyField(blank=True, related_name='products_banner_discount', to='products.product')),
            ],
            options={
                'verbose_name': 'Chegirmalar uchun banner',
                'verbose_name_plural': 'Chegirmalar uchun bannerlar',
            },
        ),
        migrations.CreateModel(
            name='BannerBottom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', ckeditor_uploader.fields.RichTextUploadingField()),
                ('name_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('name_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='banner_bottom/')),
                ('is_active', models.BooleanField(default=True)),
                ('products', models.ManyToManyField(blank=True, related_name='products_banner_bottom', to='products.product')),
            ],
            options={
                'verbose_name': 'Pastgi Banner',
                'verbose_name_plural': 'Pastgi Bannerlar',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', ckeditor_uploader.fields.RichTextUploadingField()),
                ('name_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('name_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='banner/')),
                ('is_active', models.BooleanField(default=True)),
                ('products', models.ManyToManyField(blank=True, related_name='products_banner', to='products.product')),
            ],
            options={
                'verbose_name': 'Asosiy Banner',
                'verbose_name_plural': 'Asosiy Bannerlar',
            },
        ),
        migrations.CreateModel(
            name='Additional_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('key_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('key_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('value_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('value_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='praducts_additional_info', to='products.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('image', models.FileField(upload_to='products')),
                ('is_active', models.BooleanField(default=True)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='products.colors')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='products.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='comment/')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='praducts_review', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='praducts_review', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Commentlar',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.size')),
            ],
            options={
                'verbose_name': 'Razmer',
                'verbose_name_plural': 'Razmerlar',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('availability', models.BigIntegerField(blank=True, null=True)),
                ('price', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_size', to='products.colors')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_size', to='products.product')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_size', to='products.size')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='category',
            name='is_size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_size', to='products.size'),
        ),
    ]
